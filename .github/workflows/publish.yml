name: Publish Feed Generators
run-name: Publish Feed Generators

on:
  workflow_dispatch:
    inputs:
      target:
        type: choice
        description: Deploy target
        options: 
        - develop
        - product
        

env:
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  CLOUDFLARE_ACCOUNT_ID: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}

  CLOUDFLARE_WORKER_NAME: ${{ vars.CLOUDFLARE_WORKER_NAME }}
  CLOUDFLARE_WORKER_NAME_DEV: ${{ vars.CLOUDFLARE_WORKER_NAME_DEV }}

jobs:
  publish_feed_generators:
    runs-on: ubuntu-latest
    name: Publish Feed Generators
    steps:
      - name: Get Cloudflare Worker Subdomain
        run: |
          TARGET=${{ github.event.inputs.target }}
          if [ "$TARGET" = "product" ]; then
            WORKER_NAME=${{ env.CLOUDFLARE_WORKER_NAME }}
          else
            WORKER_NAME=${{ env.CLOUDFLARE_WORKER_NAME_DEV }}
          fi
          set -o pipefail;
          tmp=$(mktemp);
          curl -f \
              --request GET \
              --url "https://api.cloudflare.com/client/v4/accounts/${{ env.CLOUDFLARE_ACCOUNT_ID }}/workers/subdomain" \
              --header 'Content-Type: application/json' \
              --header 'Authorization: Bearer ${{ env.CLOUDFLARE_API_TOKEN }}' \
              | jq -r '.result.subdomain' > $tmp
          export CLOUDFLARE_WORKERS_SUBDOMAIN="$(cat $tmp)"
          echo "FEEDGEN_HOSTNAME=$WORKER_NAME.${CLOUDFLARE_WORKERS_SUBDOMAIN}.workers.dev" >> "$GITHUB_ENV"
          
          TARGET=${{ github.event.inputs.target }}}
          FEEDGEN_SERVICE_DID=${{ github.env.vars.FEEDGEN_SERVICE_DID }}
          BLUESKY_HANDLE=${{ github.env.vars.BLUESKY_HANDLE }}
          BLUESKY_APP_PASSWORD=${{ github.env.secrets.BLUESKY_APP_PASSWORD }}

      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - name: Publish Feed Generators
        run: |
          npm install
          yarn run publishFeed