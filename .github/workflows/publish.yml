name: Deploy to Cloudflare
run-name: Deploy to Cloudflare

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      target:
        type: choice
        description: Deploy target
        options: 
        - develop
        - product

env:
  BLUESKY_HANDLE: ${{ vars.BLUESKY_HANDLE }}
  BLUESKY_APP_PASSWORD: ${{ secrets.BLUESKY_APP_PASSWORD }}
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

  CLOUDFLARE_D1_ID: ${{ secrets.CLOUDFLARE_D1_ID }}
  CLOUDFLARE_D1_NAME: ${{ vars.CLOUDFLARE_D1_NAME }}
  CLOUDFLARE_WORKER_NAME: ${{ vars.CLOUDFLARE_WORKER_NAME }}

  CLOUDFLARE_D1_ID_DEV: ${{ secrets.CLOUDFLARE_D1_ID_DEV }}
  CLOUDFLARE_D1_NAME_DEV: ${{ vars.CLOUDFLARE_D1_NAME_DEV }}
  CLOUDFLARE_WORKER_NAME_DEV: ${{ vars.CLOUDFLARE_WORKER_NAME_DEV }}
  

jobs:
  deploy_cloudflare_worker:
    runs-on: ubuntu-latest
    name: Deploy Cloudflare Worker
    steps:
      - uses: actions/checkout@v4
      - name: Populate wrangler.toml
        run: |
          TARGET=${{ github.event.inputs.target }}
          if [ "$TARGET" = "product" ]; then
            WORKER_NAME=${{ env.CLOUDFLARE_WORKER_NAME }}
            DB_ID=${{ env.CLOUDFLARE_D1_ID }}
            DB_NAME=${{ env.CLOUDFLARE_D1_NAME }}
          else
            WORKER_NAME=${{ env.CLOUDFLARE_WORKER_NAME_DEV }}
            DB_ID=${{ env.CLOUDFLARE_D1_ID_DEV }}
            DB_NAME=${{ env.CLOUDFLARE_D1_NAME_DEV }}
          fi

          >wrangler.toml
          echo "name = \"$WORKER_NAME\"" >>wrangler.toml
          echo compatibility_date = \"2024-09-23\" >>wrangler.toml
          echo compatibility_flags = \[ \"nodejs_compat\" \] >>wrangler.toml
          echo \[ build.upload \] >>wrangler.toml
          echo external = \[ \"linq-to-typescript\" \] >>wrangler.toml
          echo \[\[ d1_databases \]\] >>wrangler.toml
          echo binding = \"DB\"  >>wrangler.toml
          echo preview_database_id = \"DB\"  >>wrangler.toml
          echo database_name = \"$DB_NAME\" >>wrangler.toml
          echo "database_id = \"$DB_ID\"" >>wrangler.toml
          echo \[observability\] >>wrangler.toml
          echo enabled = "true" >>wrangler.toml
      - name: Store Secrets and Deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ env.CLOUDFLARE_API_TOKEN }}
          secrets: |
            BLUESKY_HANDLE
            BLUESKY_APP_PASSWORD
            if [ "${{ github.event.inputs.target }}" = "product" ]; then
              FEEDGEN_HOSTNAME=${{ env.CLOUDFLARE_WORKER_NAME }}
            else
              FEEDGEN_HOSTNAME=${{ env.CLOUDFLARE_WORKER_NAME_DEV }}
            fi
          command: |
            deploy src/server.ts
      - name: Cleanup wrangler.toml
        run: |
          rm -f wrangler.toml